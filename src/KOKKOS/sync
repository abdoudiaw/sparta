compute_surf_kokkos.cpp:  surf_kk->sync(Device,ALL_MASK);
compute_surf_kokkos.cpp:  d_lines = surf_kk->k_lines.d_view;
compute_surf_kokkos.cpp:  d_tris = surf_kk->k_tris.d_view;
fix_move_surf_kokkos.cpp:  surf_kk->sync(Host,ALL_MASK);
fix_move_surf_kokkos.cpp:  surf_kk->modify(Host,ALL_MASK);
read_surf_kokkos.cpp:  surf_kk->modify(Host,ALL_MASK);
surf_kokkos.cpp:          surf_kk->k_lines = tdual_line_1d("surf:lines",nmax);
surf_kokkos.cpp:        surf_kk->sync(Host,LINE_MASK);
surf_kokkos.cpp:        surf_kk->modify(Host,LINE_MASK); // force resize on host
surf_kokkos.cpp:        surf_kk->k_lines.resize(nmax);
surf_kokkos.cpp:      lines = surf_kk->k_lines.h_view.data();
surf_kokkos.cpp:          surf_kk->k_tris = tdual_tri_1d("surf:tris",nmax);
surf_kokkos.cpp:        surf_kk->sync(Host,TRI_MASK);
surf_kokkos.cpp:        surf_kk->modify(Host,TRI_MASK); // force resize on host
surf_kokkos.cpp:        surf_kk->k_tris.resize(nmax);
surf_kokkos.cpp:      tris = surf_kk->k_tris.h_view.data();
surf_kokkos.cpp:          surf_kk->k_mylines = tdual_line_1d("surf:mylines",nown);
surf_kokkos.cpp:        surf_kk->sync(Host,LINE_MASK);
surf_kokkos.cpp:        surf_kk->modify(Host,LINE_MASK); // force resize on host
surf_kokkos.cpp:        surf_kk->k_mylines.resize(nown);
surf_kokkos.cpp:      mylines = surf_kk->k_mylines.h_view.data();
surf_kokkos.cpp:          surf_kk->k_mytris = tdual_tri_1d("surf:mytris",nown);
surf_kokkos.cpp:        surf_kk->sync(Host,TRI_MASK);
surf_kokkos.cpp:        surf_kk->modify(Host,TRI_MASK); // force resize on host
surf_kokkos.cpp:        surf_kk->k_mytris.resize(nown);
surf_kokkos.cpp:      mytris = surf_kk->k_mytris.h_view.data();
update_kokkos.cpp:      surf_kk->wrap_kokkos();
update_kokkos.cpp:      surf_kk->modify(Host,ALL_MASK);
update_kokkos.cpp:      surf_kk->sync(Device,ALL_MASK);
update_kokkos.cpp:      d_lines = surf_kk->k_lines.d_view;
update_kokkos.cpp:      d_tris = surf_kk->k_tris.d_view;
update_kokkos.cpp:      compute_surf_kk->pre_surf_tally();
