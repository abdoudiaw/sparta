"SPARTA WWW Site"_sws - "SPARTA Documentation"_sd - "SPARTA Commands"_sc :c

:link(sws,http://sparta.sandia.gov)
:link(sd,Manual.html)
:link(sc,Section_commands.html#comm)

:line

read_restart command :h3

[Syntax:]

read_restart file :pre

file = name of binary restart file to read in :ul

[Examples:]

read_restart save.10000
read_restart restart.*
read_restart flow.*.% :pre

:pre

[Description:]

Read in a previously saved simulation from a restart file.  This
allows continuation of a previous run on the same or different number
of processors.  Information about what is stored in a restart file is
given below.  Basically this operation will re-create the simulation
box with all its particles, the hierarchical grid used to track
particles, and surface elements embedded in the grid, all with their
attributes at the point in time the information was written to the
restart file by a previous simluation.

Although restart files are saved in binary format to allow exact
regeneration of information, the random numbers used in the continued
run will not be identical to those used if the run had been continued.
Hence the new run will not be identical to the continued original run,
but should be statistically similar.

If a restarted run is performed on the same number of processors as
the original run, then the assignment of grid cells (and their
particles) to processors will be the same as in the original
simulation.




IMPORTANT NOTE: Using the {gridcut} keyword with a cutoff >= 0.0 is
only possible if the grid cells owned by each processor are "clumped"
(by the time the next simulation is performed).  This will be the case
if the {clump}, {block}, or {rcb} option of the
"balance_grid"_balance_grid.html, or the {rcb} option of the "fix
balance"_fix_balance.html command is used.  If grid cells are not
clumped, then ghost cells cannot be stored for a {gridcut} cutoff >=
0.0.  This will generate an error when a simulation is performed.

IMPORTANT NOTE: The {gridcut} keyword can be specified at any time,
but if the grid already exists, it erases ghost cell information that
is currently stored.  Thus if the grid already exists, a
"balance"_balance.html command must be invoked to regenerate ghost
cell information before a simulation is performed.



NOTE: discuss what happens on same or different # of procs, whether
should change partitioning via the "balance"_balance.html or "fix
balance"_fix_balance.html commands.

IMPORTANT NOTE: Because restart files are binary, they may not be
portable to other machines.


IMPORTANT NOTE: If restart on different # of procs, probalby
want to use balance command.

If you restart on a different number of processors, with a gridcut
setting >= 0.0, then SPARTA will be unable to generate ghost cell
information when reformulating the grid. This is because decomposition
will be unclumped.  Using balance command will remedy this.  Can
also change the gridcut setting before doing this if desired.



Similar to how restart files are written (see the
"write_restart"_write_restart.html and "restart"_restart.html
commands), the restart filename can contain two wild-card characters.
If a "*" appears in the filename, the directory is searched for all
filenames that match the pattern where "*" is replaced with a timestep
value.  The file with the largest timestep value is read in.  Thus,
this effectively means, read the latest restart file.  It's useful if
you want your script to continue a run from where it left off.  See
the "run"_run.html command and its "upto" option for how to specify
the run command so it doesn't need to be changed either.

If a "%" character appears in the restart filename, SPARTA expects a
set of multiple files to exist.  The "restart"_restart.html and
"write_restart"_write_restart.html commands explain how such sets are
created.  Read_restart will first read a filename where "%" is
replaced by "base".  This file tells SPARTA how many processors
created the set and how many files are in it.  Read_restart then reads
the additional files.  For example, if the restart file was specified
as save.% when it was written, then read_restart reads the files
save.base, save.0, save.1, ... save.P-1, where P is the number of
processors that created the restart file.

Note that P could be the total number of processors in the previous
simulation, or some subset of those processors, if the {fileper} or
{nfile} options were used when the restart file was written; see the
"restart"_restart.html and "write_restart"_write_restart.html commands
for details.  The processors in the current SPARTA simulation share
the work of reading these files; each reads a roughly equal subset of
the files.  The number of processors which created the set can be
different the number of processors in the current SPARTA simulation.
This can be a fast mode of input on parallel machines that support
parallel I/O.

:line

A restart file stores only the following information about a
simulation:

units
simulation box size and boundary conditions
all settings of the global command
particles with their individual attributes
particle species info
geometry of the hierarchical grid that overlays the simulation domain
geometry of all derined surface elements
current timestep number :ul

Basically, this means the information specified in the original input
script by these commands is saved in the restart file:

units
dimension
create_box
boundary
species
create_grid or read_grid
read_surf :ul

No other information is stored in the restart file.  Specifically,
information about these simulation entities is NOT stored:

regions
mixtures
computes
fixes
collision model
chemistry model  (or reaction model?)
surface collision models
variables
output options for stats, dump, restart files
timestep size :ul

Basically, this means any information specified in the original input
script by these commands needs to be re-specified in the new input
script that reads the restart file, assuming the continued simulation
needs the information:

region
mixture
compute
fix
collide
react
surf_collide
variable
stats_style
dump
restart
timestep :ul

Things of note:
not vremax
IMPORTANT NOTE: status of time-average fixes?
assign surf collision model to global boundary or surfs

Note that many commands can be used after a restart file is read, to
re-specify a setting that was stored in the restart file.  file is
read.  For example, the "global"_global.html command can be used to
reset the values of its specified keywords.

:line

[Restrictions:] none

[Related commands:]

"read_grid"_read_grid.html, "read_surf"_read_surf.html,
"write_restart"_write_restart.html, "restart"_restart.html

[Default:] none
