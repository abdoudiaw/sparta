"SPARTA WWW Site"_sws - "SPARTA Documentation"_sd - "SPARTA Commands"_sc :c

:link(sws,http://sparta.sandia.gov)
:link(sd,Manual.html)
:link(sc,Section_commands.html#comm)

:line

compute fft/grid command :h3

[Syntax:]

compute ID fft/grid value1 value2 ... :pre

ID is documented in "compute"_compute.html command :ulb,l
fft/grid = style name of this compute command :l
one or more values can be appended :l
value = c_ID, c_ID\[N\], f_ID, f_ID\[N\], v_name :l
  c_ID = per-grid vector calculated by a compute with ID
  c_ID\[I\] = Ith column of per-grid array calculated by a compute with ID
  f_ID = per-grid vector calculated by a fix with ID
  f_ID\[I\] = Ith column of per-grid or array calculated by a fix with ID
  v_name = per-grid vector calculated by a grid-style variable with name :pre
:ule

[Examples:]

compute 1 fft/grid c_1 :pre

These commands will dump FFTs of time-averaged velocity components in
each grid cell to a dump file every 1000 steps:

compute 1 grid all u v w
fix 1 ave/grid 10 100 1000 c_1
compute 2 fft/grid f_1[1] f_1[2] f_1[3]
dump 1 grid all 1000 tmp.grid id c_2 :pre

[Description:]

Define a computation that performs an FFT for a grid of
values. 

2d or 3d

MUST be regular grid

The results of this compute can be used by different commands in
different ways.  The values for a single timestep can be output by the
"dump grid"_dump.html command.

The values over many sampling timesteps can be averaged by the "fix
ave/grid"_fix_ave_grid.html command.  NOTE: does this make any sense?

Each listed input is operated on independently.

Each listed input can be the result of a "compute"_compute.html or
"fix"_fix.html or the evaluation of a "variable"_variable.html, all of
which must generate per-grid quantities.

If a value begins with "c_", a compute ID must follow which has been
previously defined in the input script.  The compute must generate a
per-grid vector or array.  See the individual "compute"_compute.html
doc page for details.  If no bracketed integer is appended, the vector
calculated by the compute is used.  If a bracketed integer is
appended, the Ith column of the array calculated by the compute is
used.  Users can also write code for their own compute styles and "add
them to SPARTA"_Section_modify.html.

If a value begins with "f_", a fix ID must follow which has been
previously defined in the input script.  The fix must generate a
per-grid vector or array.  See the individual "fix"_fix.html doc page
for details.  Note that some fixes only produce their values on
certain timesteps, which must be compatible with when this compute
references the values, else an error results.  If no bracketed integer
is appended, the vector calculated by the fix is used.  If a bracketed
integer is appended, the Ith column of the array calculated by the fix
is used.  Users can also write code for their own fix style and "add
them to SPARTA"_Section_modify.html.

If a value begins with "v_", a variable name must follow which has
been previously defined in the input script.  It must be a grid-style
variable"_variable.html.  Such a variable defines a formula which can
reference stats keywords or invoke other computes, fixes, or variables
when they are evaluated.  So this is a very general means of creating
a per-grid input to perform an FFT on.

:line
:line

[Output info:]

REAL vs COMPLEX

This compute calculates a per-grid array, with the number of columns
equal to the number of values times the number of groups.  The
ordering of columns is first by values, then by groups.  I.e. if the
{n} and {u} values were specified as keywords, then the first two
columns would be {n} and {u} for the first group, the 3rd and 4th
columns would be {n} and {u} for the second group, etc.

This compute performs calculations for all flavors of child grid cells
in the simulation, which includes unsplit, cut, split, and sub cells.
See "Section 4.8"_Section_howto.html#howto_8 of the manual gives
details of how SPARTA defines child, unsplit, split, and sub cells.
Note that cells inside closed surfaces contain no particles.  These
could be unsplit or cut cells (if they have zero flow volume).  Both
of these kinds of cells will compute a zero result for all their
values.  Likewise, split cells store no particles and will produce a
zero result.  This is because their sub-cells actually contain the
particles that are geometrically inside the split cell.

The array can be accessed by any command that uses per-grid values
from a compute as input.  See "Section 4.4"_Section_howto.html#howto_4
for an overview of SPARTA output options.

The per-grid array values will be in the "units"_units.html
appropriate to the individual values as described above.  {N} is
unitless.  {Nrho} is in 1/distance^3 units for 3d simulations and
1/distance^2 units for 2d simulations.  {Mass} is in mass units.
{Massrho} is in is in mass/distance^3 units for 3d simulations and
mass/distance^2 units for 2d simulations.  {U}, {v}, and {w} are in
velocity units.  {Usq}, {vsq}, and {wsq} are in velocity squared
units.  {Ke}, {erot}, and {evib} are in energy units.  {Temp} and
{trot} and {tvib} are in temperature units.  {Pxrho}, {pyrho}, {pzrho}
are in momentum/distance^3 units for 3d simulations and
momentum/distance^2 units for 2d simulations, where momentum is in
units of mass*velocity.  {Kerho} is in units of energy/distance^3
units for 3d simulations and energy/distance^2 units for 2d
simulations.

[Restrictions:] none

[Related commands:]

"fix ave/grid"_fix_ave_grid.html, "dump grid"_dump.html, "compute
grid"_compute_grid.html

[Default:] none
